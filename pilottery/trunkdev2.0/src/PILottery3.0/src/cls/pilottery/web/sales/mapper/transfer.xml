<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cls.pilottery.web.sales.dao.TransferDao">
	<resultMap id="transferMap" type="cls.pilottery.web.sales.entity.StockTransfer" >
	    <id column="STB_NO" property="stbNo" />
	    <result column="APPLY_ADMIN" property="applyAdmin"  />
	    <result column="APPLY_DATE" property="applyDate"  />
	    <result column="APPROVE_ADMIN" property="approveAdmin"  />
	    <result column="APPROVE_DATE" property="approveDate"  />
	    <result column="SEND_ORG" property="sendOrg"  />
	    <result column="SEND_ORG_NAME" property="sendOrgName"  />
	    <result column="SEND_WH" property="sendWh" />
	    <result column="SEND_MANAGER" property="sendManager" />
	    <result column="SEND_MANAGER_NAME" property="sendManagerName" />
	    <result column="SEND_DATE" property="sendDate"  />
	    <result column="RECEIVE_ORG" property="receiveOrg"  />
	    <result column="RECEIVE_ORG_NAME" property="receiveOrgName"  />
	    <result column="RECEIVE_WH" property="receiveWh" />
	    <result column="RECEIVE_MANAGER" property="receiveManager" />
	    <result column="RECEIVE_MANAGER_NAME" property="receiveManagerName" />
	    <result column="RECEIVE_DATE" property="receiveDate"  />
	    <result column="STATUS" property="status" />
	    <result column="TICKETS" property="tickets" />
	    <result column="AMOUNT" property="amount" />
	    <result column="ACT_TICKETS" property="actTickets" />
	    <result column="ACT_AMOUNT" property="actAmount" />
	    <result column="IS_MATCH" property="isMatch" />
	    <result column="APPLY_NAME" property="applyName" />
	    <result column="APPROVE_NAME" property="approveName" />
	    <result column="REMARK" property="remark" />
	    <collection property="transferDetail" ofType="cls.pilottery.web.sales.entity.StockTransferDetail">
			<id column="STB_NO" property="stbNo"/>
		    <id column="SEQUENCE_NO" property="sequenceNo" />
		    <result column="PLAN_CODE" property="planCode" />
		    <result column="PLAN_NAME" property="planName" />
		    <result column="PACKAGES" property="packages" />
		    <result column="DETAIL_TICKETS" property="detailTickets" />
		    <result column="DETAIL_AMOUNT" property="detailAmount" />
		    <result column="REMARK" property="remark" />
		</collection>
	</resultMap>
	
	<select id="getTransferList" parameterType="cls.pilottery.web.sales.form.TransferForm"	resultMap="transferMap">
		select * from (
		select tab.*,rownum rn from (
		SELECT STB_NO,
		       APPLY_ADMIN,
		       APPLY_DATE,
		       APPROVE_ADMIN,
		       APPROVE_DATE,
		       RECEIVE_ORG,
		       RECEIVE_WH,
		       RECEIVE_MANAGER,
		       RECEIVE_DATE,
		       SEND_ORG, 
		       SEND_WH, 
		       SEND_MANAGER, 
		       SEND_DATE,
		       TICKETS,
		       AMOUNT,
		       ACT_TICKETS,
		       ACT_AMOUNT,
		       STATUS,
		       IS_MATCH,
		       REMARK,
		       b.ADMIN_REALNAME APPLY_NAME,
		       d.ADMIN_REALNAME APPROVE_NAME,
		       c.ORG_NAME RECEIVE_ORG_NAME,
		       e.ORG_name SEND_ORG_NAME
		  FROM SALE_TRANSFER_BILL a
		       LEFT JOIN ADM_INFO b ON (a.APPLY_ADMIN = b.ADMIN_ID)
		       LEFT JOIN INF_ORGS c ON (a.RECEIVE_ORG = c.ORG_CODE)
		       LEFT JOIN ADM_INFO d ON (a.APPROVE_ADMIN = d.ADMIN_ID)
		       LEFT JOIN INF_ORGS e ON (a.SEND_ORG = e.ORG_CODE)
		WHERE a.APPLY_ADMIN = #{currentUserId}
		<if test="stockTransferNo != null and stockTransferNo != ''">
			AND a.STB_NO = #{stockTransferNo}
		</if>
		<if test="applyDate != null and applyDate != ''">
			AND to_char(a.APPLY_DATE,'yyyy-mm-dd') = #{applyDate}
		</if>
		ORDER BY APPLY_DATE DESC
		<![CDATA[ ) TAB ) where rn > ${beginNum} and rn <= ${endNum} ]]>
	</select>

	<select id="getTransferCount" parameterType="cls.pilottery.web.sales.form.TransferForm"	resultType="Integer">
		SELECT count(1)
		FROM SALE_TRANSFER_BILL
		WHERE APPLY_ADMIN = #{currentUserId}
		<if test="stockTransferNo != null and stockTransferNo != ''">
			AND STB_NO = #{stockTransferNo}
	    </if>
		<if test="applyDate != null and applyDate != ''">
			AND to_char(APPLY_DATE,'yyyy-mm-dd') = #{applyDate}
	    </if>
	</select>
	
	<select id="getTransferListForInquery" parameterType="cls.pilottery.web.sales.form.TransferForm"	resultMap="transferMap">
		select * from (
		select tab.*,rownum rn from (
		SELECT STB_NO,
		       APPLY_ADMIN,
		       APPLY_DATE,
		       APPROVE_ADMIN,
		       APPROVE_DATE,
		       RECEIVE_ORG,
		       RECEIVE_WH,
		       RECEIVE_MANAGER,
		       RECEIVE_DATE,
		       SEND_ORG, 
		       SEND_WH, 
		       SEND_MANAGER, 
		       SEND_DATE,
		       TICKETS,
		       AMOUNT,
		       ACT_TICKETS,
		       ACT_AMOUNT,
		       STATUS,
		       IS_MATCH,
		       REMARK,
		       b.ADMIN_REALNAME APPLY_NAME,
		       d.ADMIN_REALNAME APPROVE_NAME,
		       c.ORG_NAME RECEIVE_ORG_NAME,
		       e.ORG_name SEND_ORG_NAME
		  FROM SALE_TRANSFER_BILL a
		       LEFT JOIN ADM_INFO b ON (a.APPLY_ADMIN = b.ADMIN_ID)
		       LEFT JOIN INF_ORGS c ON (a.RECEIVE_ORG = c.ORG_CODE)
		       LEFT JOIN ADM_INFO d ON (a.APPROVE_ADMIN = d.ADMIN_ID)
		       LEFT JOIN INF_ORGS e ON (a.SEND_ORG = e.ORG_CODE)
		WHERE status != 2
		<if test="stockTransferNo != null and stockTransferNo != ''">
			AND a.STB_NO = #{stockTransferNo}
		</if>
		<if test="institutionCode != null and institutionCode != ''">
			and b.ADMIN_ORG = #{institutionCode}
	    </if>
	    <if test="institutionCode == null or institutionCode == ''">
	  		<if test="cuserOrg != '00'">
	  			AND b.ADMIN_ORG IN (
	  				SELECT org_code FROM ADM_ORG_RELATE WHERE admin_id = #{currentUserId}
	  				UNION 
	  				SELECT admin_org FROM adm_info  WHERE admin_id = #{currentUserId}
	  			)
	  		</if>
	    </if>
		<if test="applyDate != null and applyDate != ''">
			AND to_char(a.APPLY_DATE,'yyyy-mm-dd') = #{applyDate}
		</if>
		ORDER BY DECODE(STATUS,1,1,2),APPLY_DATE DESC
		<![CDATA[ ) TAB ) where rn > ${beginNum} and rn <= ${endNum} ]]>
	</select>

	<select id="getTransferCountForInquery" parameterType="cls.pilottery.web.sales.form.TransferForm" resultType="Integer">
		SELECT count(1)
		FROM SALE_TRANSFER_BILL a
        LEFT JOIN ADM_INFO b ON (a.APPLY_ADMIN = b.ADMIN_ID)
		WHERE status != 2
		<if test="stockTransferNo != null and stockTransferNo != ''">
			AND STB_NO = #{stockTransferNo}
	    </if>
	    <if test="institutionCode != null and institutionCode != ''">
			and b.ADMIN_ORG = #{institutionCode}
	    </if>
	    <if test="institutionCode == null or institutionCode == ''">
	  		<if test="cuserOrg != '00'">
	  			AND b.ADMIN_ORG IN (
	  				SELECT org_code FROM ADM_ORG_RELATE WHERE admin_id = #{currentUserId}
	  				UNION 
	  				SELECT admin_org FROM adm_info  WHERE admin_id = #{currentUserId}
	  			)
	  		</if>
	    </if>
		<if test="applyDate != null and applyDate != ''">
			AND to_char(APPLY_DATE,'yyyy-mm-dd') = #{applyDate}
	    </if>
	</select>
	
	<select id="getStockTransferSeq" resultType="string">
		select F_GET_SALE_TRANSFER_BILL_SEQ from dual
	</select>
	
	<insert id="saveTransferDetail" parameterType="cls.pilottery.web.sales.entity.StockTransferDetail">
		INSERT INTO SALE_TB_APPLY_DETAIL(STB_NO, SEQUENCE_NO, PLAN_CODE, TICKETS, PACKAGES, AMOUNT)
		VALUES (#{stbNo},F_GET_DETAIL_SEQUENCE_NO_SEQ,#{planCode},#{detailTickets},#{packages},#{detailAmount})
	</insert>
	
	<insert id="saveStockTransfer" parameterType="cls.pilottery.web.sales.entity.StockTransfer">
		INSERT INTO SALE_TRANSFER_BILL(STB_NO, APPLY_ADMIN, APPLY_DATE, SEND_ORG, RECEIVE_ORG, TICKETS, AMOUNT, STATUS,REMARK)
		VALUES (#{stbNo},#{applyAdmin},sysdate,#{sendOrg},#{receiveOrg},#{tickets},#{amount},1,#{remark})
	</insert>
	
	<update id="modifyStockTransfer" parameterType="map">
		update SALE_TRANSFER_BILL set status = #{status} where STB_NO = #{stbNo}
	</update>
	
	<select id="getTransferDetail" parameterType="string" resultMap="transferMap">
		WITH orders as (
			SELECT STB_NO,
			       APPLY_ADMIN,
			       APPLY_DATE,
			       APPROVE_ADMIN,
			       APPROVE_DATE,
			       RECEIVE_ORG,
			       RECEIVE_WH,
			       RECEIVE_MANAGER,
			       RECEIVE_DATE,
			       SEND_ORG, 
			       SEND_WH, 
			       SEND_MANAGER, 
			       SEND_DATE,
			       TICKETS,
			       AMOUNT,
			       ACT_TICKETS,
			       ACT_AMOUNT,
			       STATUS,
			       IS_MATCH,
			       a.remark,
			       b.ADMIN_REALNAME APPLY_NAME,
			       d.ADMIN_REALNAME APPROVE_NAME,
			       c.ORG_NAME RECEIVE_ORG_NAME,
			       e.ORG_name SEND_ORG_NAME,
			       f.ADMIN_REALNAME RECEIVE_MANAGER_NAME,
			       g.ADMIN_REALNAME SEND_MANAGER_NAME
			  FROM SALE_TRANSFER_BILL a
			       LEFT JOIN ADM_INFO b ON (a.APPLY_ADMIN = b.ADMIN_ID)
			       LEFT JOIN INF_ORGS c ON (a.RECEIVE_ORG = c.ORG_CODE)
			       LEFT JOIN ADM_INFO d ON (a.APPROVE_ADMIN = d.ADMIN_ID)
			       LEFT JOIN INF_ORGS e ON (a.SEND_ORG = e.ORG_CODE)
			       LEFT JOIN ADM_INFO f ON (a.RECEIVE_MANAGER = f.ADMIN_ID)
			       LEFT JOIN ADM_INFO g ON (a.SEND_MANAGER = g.ADMIN_ID)
			 WHERE STB_NO = #{stbNo}      
			),
			detail as (
			select STB_NO, SEQUENCE_NO, X.PLAN_CODE,FULL_NAME AS PLAN_NAME,TICKETS, PACKAGES, AMOUNT 
			from SALE_TB_APPLY_DETAIL x, game_plans y
			where x.plan_code = y.plan_code
			and stb_no = #{stbNo}
			)
			SELECT orders.*,detail.SEQUENCE_NO, detail.PLAN_CODE,detail.PLAN_NAME,detail.TICKETS detail_tickets, detail.PACKAGES , detail.AMOUNT detail_amount 
			from detail,orders
			where detail.stb_no(+) = orders.stb_no
	</select>
	
	<update id="updateStockTransfer" parameterType="cls.pilottery.web.sales.entity.StockTransfer">
		UPDATE SALE_TRANSFER_BILL
		SET APPLY_ADMIN=#{applyAdmin},
			APPLY_DATE = SYSDATE,
			SEND_ORG = #{sendOrg},
			RECEIVE_ORG = #{receiveOrg},
			TICKETS = #{tickets},
			AMOUNT = #{amount},
			STATUS = 1,
			REMARK = #{remark}
	  WHERE STB_NO = #{stbNo}
	</update>
	
	<update id="deleteTransferDetails" parameterType="string">
		delete from SALE_TB_APPLY_DETAIL where STB_NO = #{stbNo}
	</update>
	
	<update id="updateStockTransferAproval" parameterType="cls.pilottery.web.sales.entity.StockTransfer">
		update SALE_TRANSFER_BILL set status = #{status},APPROVE_ADMIN=#{approveAdmin},APPROVE_DATE=sysdate where STB_NO = #{stbNo}
	</update>
	<select id="getOrgAccountInfo" parameterType="String" resultType="cls.pilottery.web.sales.model.OrgAccountModel">
		SELECT ORG_CODE orgCode,
	       ACC_TYPE accountType,
	       ACC_NAME orgName,
	       ACC_STATUS accountStatus,
	       ACC_NO accountNo,
	       CREDIT_LIMIT credit,
	       ACCOUNT_BALANCE balance,
	       FROZEN_BALANCE frozenBalance,
	   	   CHECK_CODE checkCode,
           ORG_TYPE orgType
      FROM ACC_ORG_ACCOUNT
      JOIN INF_ORGS USING (ORG_CODE)
	 WHERE ORG_CODE = #{orgCode}
	   AND ACC_STATUS = 1
	</select>
	<update id="updateOrgAccountBalance" parameterType="cls.pilottery.web.sales.model.OrgAccountModel">
		UPDATE ACC_ORG_ACCOUNT SET ACCOUNT_BALANCE = #{balance} 
		WHERE ORG_CODE = #{orgCode}
	</update>
	<insert id="insertOrgAccountFlow" parameterType="cls.pilottery.web.sales.model.OrgAccountFlowModel">
		INSERT INTO FLOW_ORG(ORG_FUND_FLOW, REF_NO, FLOW_TYPE, ACC_NO, ORG_CODE, CHANGE_AMOUNT, FROZEN_AMOUNT, BE_ACCOUNT_BALANCE, BE_FROZEN_BALANCE, AF_ACCOUNT_BALANCE, AF_FROZEN_BALANCE, TRADE_TIME)
		VALUES(F_GET_FLOW_ORG_SEQ,#{refNo},#{flowType},#{accountNo},#{orgCode},#{changeAmount},#{frozen},#{beforeAmount},#{beforeFrozen},#{afterAmount},#{afterFrozen},SYSDATE)
	</insert>
	
	<select id="getOrgCommByTransfer" resultType="long" parameterType="map">
		select SUM(AMOUNT*SALE_COMM)/1000 from SALE_TB_APPLY_DETAIL
		  join GAME_ORG_COMM_RATE using (PLAN_CODE)
		 where STB_NO = #{stbNo} AND ORG_CODE = #{orgCode}
	</select>
	
	<update id="modifyStockTransferExpired" parameterType="cls.pilottery.web.sales.entity.StockTransfer">
		update SALE_TRANSFER_BILL set status = #{status},remark = #{remark} where STB_NO = #{stbNo}
	</update>
	
</mapper>
