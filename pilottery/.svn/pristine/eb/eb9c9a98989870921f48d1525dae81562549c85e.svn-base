package cls.taishan.system.controller;

import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import cls.taishan.system.model.Role;
import cls.taishan.system.service.RoleService;

@Controller
@RequestMapping("role")
public class RoleController {
	@Autowired
	private RoleService roleService;
	
	@RequestMapping(params = "method=initRoleList")
	public String initRoleList(HttpServletRequest request) {
		return "system/role/roleList";
	}
	
	@ResponseBody
	@RequestMapping(params = "method=listRoles")
	public Object listRoles() {
		List<Role> role = roleService.getAllRoles();
		return role;
	}
	
	@RequestMapping(params = "method=editRole")
	public String editRole(HttpServletRequest request, ModelMap model, long roleId) {
		Role role = roleService.getRoleById(roleId);
		model.addAttribute("role",role);
		return "system/role/editRole";
	}
	
	@ResponseBody
	@RequestMapping(params = "method=updateRole")
	public String updateRole(HttpServletRequest request, ModelMap model, Role role) {
		try {
			roleService.updateRole(role);
		} catch (Exception e) {
			e.printStackTrace();
			return "error";
		}
		
		return "success";
	}
	
	@RequestMapping(params = "method=addRole")
	public String addRole(HttpServletRequest request, ModelMap model ) {
		return "system/role/addRole";
	}
	
	@ResponseBody
	@RequestMapping(params = "method=saveRole")
	public String saveRole(HttpServletRequest request,HttpSession session, ModelMap model, Role role) {
		try {
			roleService.saveRole(role);
		} catch (Exception e) {
			e.printStackTrace();
			return "error";
		} 
		return "success";
	}
	
	@ResponseBody
	@RequestMapping(params = "method=deleteRole")
	public String deleteRole(HttpServletRequest request, ModelMap model, long roleId) {
		try {
			int roleUserCount = roleService.getUserCountByRole(roleId);
			if(roleUserCount > 0){	//该角色下有用户存在
				return "-1";	
			}
			roleService.deleteRole(roleId);
		} catch (Exception e) {
			e.printStackTrace();
			return "error";
		}
		return "success";
	}
}
