package test.pos;

import java.io.UnsupportedEncodingException;
import java.util.Arrays;

import org.junit.Test;

import cls.pilottery.common.utils.HttpClientUtils;
import cls.pilottery.common.utils.MD5Util;
import cls.pilottery.common.utils.TEAUtil;
import cls.pilottery.common.utils.ZipUtil;
import cls.pilottery.pos.common.model.BaseRequest;
import cls.pilottery.pos.system.model.bank.BankTopupRequest;
import cls.pilottery.pos.system.model.bank.BankWithdrawRequest;
import cls.pilottery.pos.system.model.bank.OutletAccInfoRequest;

import com.alibaba.fastjson.JSON;

public class BankServiceTest {
	
	@Test
	public void testTopupType() throws UnsupportedEncodingException{
		String url = "http://localhost:8080/PILottery/pos.do";
		BaseRequest request = new BaseRequest();
		request.setMethod("30001");
		request.setToken("0012201703091936480537d0c2-dd9f-");
		request.setMsn(5);

		String reqJson = JSON.toJSONString(request);
		String md5 = MD5Util.MD5Encode(reqJson);
		System.out.println(md5+reqJson);
		byte[] paramBytes = (md5+reqJson).getBytes();
		System.out.println("请求消息为：");
		System.out.println(Arrays.toString(paramBytes));
		
		paramBytes = ZipUtil.deflater(paramBytes);
		System.out.println("压缩后的请求消息为：");
		System.out.println(Arrays.toString(paramBytes));
		
		paramBytes = TEAUtil.encryptByTea(paramBytes);
		System.out.println("加密后的消息为：");
		System.out.println(Arrays.toString(paramBytes));
		
		byte[] result = HttpClientUtils.post(url, paramBytes);
		System.out.println("收到响应消息,响应消息为：");
		System.out.println(Arrays.toString(result));
		
		result = TEAUtil.decryptByTea(result);
		System.out.println("解密后消息为：");
		System.out.println(Arrays.toString(result));
		
		result = ZipUtil.infater(result);
		System.out.println("解压缩后消息为：");
		System.out.println(Arrays.toString(result));
		System.out.println(new String(result,"utf-8"));
	}
	
	@Test
	public void OutletBankAccInfo() throws UnsupportedEncodingException{
		String url = "http://localhost:8080/PILottery/pos.do";
		BaseRequest request = new BaseRequest();
		request.setMethod("30002");
		request.setToken("0012201703091925136aa07ef9-18af-");
		request.setMsn(1);
		OutletAccInfoRequest ac = new OutletAccInfoRequest();
		ac.setOutletCode("01000001");
		ac.setTypeCode(1);
		request.setParam(ac);
		
		String reqJson = JSON.toJSONString(request);
		String md5 = MD5Util.MD5Encode(reqJson);
		System.out.println(md5+reqJson);
		byte[] paramBytes = (md5+reqJson).getBytes();
		System.out.println("请求消息为：");
		System.out.println(Arrays.toString(paramBytes));
		
		paramBytes = ZipUtil.deflater(paramBytes);
		System.out.println("压缩后的请求消息为：");
		System.out.println(Arrays.toString(paramBytes));
		
		paramBytes = TEAUtil.encryptByTea(paramBytes);
		System.out.println("加密后的消息为：");
		System.out.println(Arrays.toString(paramBytes));
		
		byte[] result = HttpClientUtils.post(url, paramBytes);
		System.out.println("收到响应消息,响应消息为：");
		System.out.println(Arrays.toString(result));
		
		result = TEAUtil.decryptByTea(result);
		System.out.println("解密后消息为：");
		System.out.println(Arrays.toString(result));
		
		result = ZipUtil.infater(result);
		System.out.println("解压缩后消息为：");
		System.out.println(Arrays.toString(result));
		System.out.println(new String(result,"utf-8"));
	}
	
	@Test
	public void bankTopUp() throws UnsupportedEncodingException{
		String url = "http://localhost:8080/PILottery/pos.do";
		BaseRequest request = new BaseRequest();
		request.setMethod("30003");
		request.setToken("001220170309193746134ee600-ab4d-");
		request.setMsn(3);
		BankTopupRequest dor = new BankTopupRequest();
		dor.setAccountID("1111111");
		dor.setAmount(10000);
		dor.setOutleteCode("----2");
		dor.setTransPassword("1111");
		dor.setVerifyCode("123456");
		request.setParam(dor);
		
		String reqJson = JSON.toJSONString(request);
		String md5 = MD5Util.MD5Encode(reqJson);
		System.out.println(md5+reqJson);
		byte[] paramBytes = (md5+reqJson).getBytes();
		System.out.println("请求消息为：");
		System.out.println(Arrays.toString(paramBytes));
		
		paramBytes = ZipUtil.deflater(paramBytes);
		System.out.println("压缩后的请求消息为：");
		System.out.println(Arrays.toString(paramBytes));
		
		paramBytes = TEAUtil.encryptByTea(paramBytes);
		System.out.println("加密后的消息为：");
		System.out.println(Arrays.toString(paramBytes));
		
		byte[] result = HttpClientUtils.post(url, paramBytes);
		System.out.println("收到响应消息,响应消息为：");
		System.out.println(Arrays.toString(result));
		
		result = TEAUtil.decryptByTea(result);
		System.out.println("解密后消息为：");
		System.out.println(Arrays.toString(result));
		
		result = ZipUtil.infater(result);
		System.out.println("解压缩后消息为：");
		System.out.println(Arrays.toString(result));
		System.out.println(new String(result,"utf-8"));
	}
	
	@Test
	public void testbankWithdraw() throws UnsupportedEncodingException{
		String url = "http://localhost:8080/PILottery/pos.do";
		BaseRequest request = new BaseRequest();
		request.setMethod("30004");
		request.setToken("0012201703091925136aa07ef9-18af-");
		request.setMsn(1);
		BankWithdrawRequest dor = new BankWithdrawRequest();
		dor.setAccountID("11111");
		dor.setAmount(10000);
		dor.setOutletCode("01000001");
		dor.setPassword("222222");
		request.setParam(dor);
		
		String reqJson = JSON.toJSONString(request);
		String md5 = MD5Util.MD5Encode(reqJson);
		System.out.println(md5+reqJson);
		byte[] paramBytes = (md5+reqJson).getBytes();
		System.out.println("请求消息为：");
		System.out.println(Arrays.toString(paramBytes));
		
		paramBytes = ZipUtil.deflater(paramBytes);
		System.out.println("压缩后的请求消息为：");
		System.out.println(Arrays.toString(paramBytes));
		
		paramBytes = TEAUtil.encryptByTea(paramBytes);
		System.out.println("加密后的消息为：");
		System.out.println(Arrays.toString(paramBytes));
		
		byte[] result = HttpClientUtils.post(url, paramBytes);
		System.out.println("收到响应消息,响应消息为：");
		System.out.println(Arrays.toString(result));
		
		result = TEAUtil.decryptByTea(result);
		System.out.println("解密后消息为：");
		System.out.println(Arrays.toString(result));
		
		result = ZipUtil.infater(result);
		System.out.println("解压缩后消息为：");
		System.out.println(Arrays.toString(result));
		System.out.println(new String(result,"utf-8"));
	}
}
